input[type="text"],
input[type="password"],
textarea,
select {
  outline: none;
}

input {
  width: 100%;
  padding: 10px;
  border-radius: 8px;
  border: 1px solid $primary;
  outline: none;
}

input:focus {
  box-shadow: 0px 0px 0px 3px rgba($color: $primary, $alpha: 0.3);
}

textarea {
  width: 100%;
  padding: 10px;
  border-radius: 8px;
  border: 1px solid $primary;
}

.input-field {
  margin-top: 18px;
}
.input-slate {
  padding: 14px;
  box-shadow: 0px 5px 8px 0px rgba(#333, 0.2);
}

.date-picker {
  border: none;
  background-color: $grey;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  border-bottom: 2px solid $primary;
  margin-top: 3px;
  font-size: 12px;
  font-weight: bold;

  &:focus {
    border: none;
    box-shadow: none;
    border-bottom: 3px solid $primary;
  }

  &::placeholder {
    font-size: 12px;
    font-weight: normal;
  }
}


// checkbox switch
$toggle-indicator-size: 24px; // changing this number will resize the whole toggle
$track-height: $toggle-indicator-size + 6;
$track-width: $toggle-indicator-size * 2.5;
$highContrastModeSupport: solid 2px transparent;
/*

The following vars come from my theme.
You'll need to replace with your own color values.

- "$light"
- "$mid"
- "$dark"

*/
$track-border: $primary;
$track-background: rgba($color: $primary, $alpha: 1);
$focus-ring: 0px 0px 0px 2px $primary;
$speed: 0.5s;
$dark: $black;
// Toggle specific styles
.toggle {
  align-items: center;
  border-radius: 100px;
  display: flex;
  font-weight: 700;
  margin-bottom: 16px;

  &:last-of-type {
    margin: 0;
  }
}

// Since we can't style the checkbox directly, we "hide" it so we can draw the toggle.
.toggle__input {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;

  // This style sets the focus ring. The ":not([disabled])" prevents the focus ring from creating a flash when the element is clicked.
  &:not([disabled]):active + .toggle-track,
  &:not([disabled]):focus + .toggle-track {
    border: 1px solid transparent;
    box-shadow: $focus-ring;
  }

  &:disabled + .toggle-track {
    cursor: not-allowed;
    opacity: 0.7;
  }
}

.toggle-track {
  background: $track-background;
  border: 1px solid $track-border;
  border-radius: 100px;
  cursor: pointer;
  display: flex;
  height: $track-height;
  margin-right: 12px;
  position: relative;
  width: $track-width;
}

.toggle-indicator {
  align-items: center;
  background: $white;
  border-radius: $toggle-indicator-size;
  bottom: 2px;
  display: flex;
  height: $toggle-indicator-size;
  justify-content: center;
  left: 2px;
  outline: $highContrastModeSupport;
  position: absolute;
  transition: $speed;
  width: $toggle-indicator-size;
}

// The check mark is optional
.checkMark {
  fill: #fff;
  height: $toggle-indicator-size - 4;
  width: $toggle-indicator-size - 4;
  opacity: 0;
  transition: opacity $speed ease-in-out;
}

.toggle__input:checked + .toggle-track .toggle-indicator {
  background: $dark;
  transform: translateX($track-width - $track-height);

  .checkMark {
    opacity: 1;
    transition: opacity $speed ease-in-out;
  }
}

@media screen and (-ms-high-contrast: active) {
  .toggle-track {
    border-radius: 0;
  }
}
